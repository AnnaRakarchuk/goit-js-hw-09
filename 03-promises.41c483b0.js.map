{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAG7BI,EAAa,CACjBC,SAAS,GAsBX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,SAAUA,EAAUC,MAAOA,IAErCG,EAAO,CAAEJ,SAAUA,EAAUC,MAAOA,MAErCA,MA5BPX,EAAKC,OAAOkB,iBAAiB,UAAU,SAAAC,GACrCA,EAAEC,iBAIF,IAFA,IAA8BC,EA8BxB,CACJX,MAAOY,OAAOvB,EAAKI,QAAQoB,OAC3BC,KAAMF,OAAOvB,EAAKK,OAAOmB,OACzBE,OAAQH,OAAOvB,EAAKM,SAASkB,QAjCzBG,EAAwBL,EAAxBX,MAAOc,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEVE,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDnB,EAAcmB,EAAUD,GACvBE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,MAC5CJ,MAEL4B,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,MAAKJ,MAE1EoB,GAASF,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stemEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst notifyling = {\n  useIcon: false,\n};\n\nrefs.formEl.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let { delay, step, amount } = onGettingData();\n\n  for (let position = 1; position <= amount; position += 1){\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`\n      , notifyling);\n      })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, notifyling);\n    });\n    delay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) =>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  })\n}\n\nfunction onGettingData(){\n  return{\n    delay: Number(refs.delayEl.value),\n    step: Number(refs.stemEl.value),\n    amount: Number(refs.amountEl.value),\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stemEl","amountEl","$ce04d3a99e08e73b$var$notifyling","useIcon","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","ref","Number","value","step","amount","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.41c483b0.js.map"}